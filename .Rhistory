source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
figure4 <- ggplot(data= q1.fig.dat)+                                              # specify data
geom_line(aes(x=x, y=beta.pdf, color="Beta(2,5)")) +                 # plot beta dist
geom_line(aes(x=x, y=norm.pdf, color="Gaussian(0.2857, 0.0255)")) +  # plot guassian dist
geom_hline(yintercept=0)+                                            # plot x axis
theme_bw()+                                                          # change theme
xlab("x")+                                                           # label x axis
ylab("Density")+                                                     # label y axis
scale_color_manual("", values = c("black", "grey"))+                 # change colors
theme(legend.position = "bottom")
figure4
figure3
figure2
figure1
figure1 <- ggplot(data= q1.fig.dat)+                                              # specify data
figure``
figure1
figure1 <- ggplot(data= q1.fig.dat)+                                              # specify data
figure4
figure4 <- ggplot(data= q1.fig.dat)+                                              # specify data
geom_line(aes(x=x, y=beta.pdf, color="Beta(0.5,0.5)")) +                 # plot beta dist
geom_line(aes(x=x, y=norm.pdf, color="Gaussian(0.2857, 0.0255)")) +  # plot guassian dist
geom_hline(yintercept=0)+                                            # plot x axis
theme_bw()+                                                          # change theme
xlab("x")+                                                           # label x axis
ylab("Density")+                                                     # label y axis
scale_color_manual("", values = c("black", "grey"))+                 # change colors
theme(legend.position = "bottom")
figure4
?integrate
beta.summary <- function(alpha, beta, k, centered){
if(!centered){
#x = seq(0, 1, length.out=1000)
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x^k - kth.centered)^k * dbeta(x,alpha,beta)
}
else{
#x = seq(0, 1, length.out=1000)
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
kth.uncentered <- function(x) (x)*dbeta(x,alpha,beta)
integrand <- function(x) (x - kth.uncentered)^k * dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.uncentered)^k * dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- function(x) (x)*dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.uncentered)^k * dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.uncentered)^k * dbeta(x,alpha,beta))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.uncentered)^k * dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
#integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
#kth.uncentered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.uncentered)^k * dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- function(x) (x)*dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.uncentered)^k * dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- function(x) (x)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.centered)^k * dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.centered)^k * dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- (x)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.centered)^k * dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
kth.centered <- function(x) (x)*dbeta(x,alpha,beta)
#kth.centered = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - kth.centered)^k * dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- function(x) (x)*dbeta(x,alpha,beta)
mu_x = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - mu_x)^k * dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
ggplot(data= fig.dat1)+
geom_histogram(aes(x=x, y=beta.pdf, color="Beta(2,5)")) +                                                  # move legend to bottom
yes
source("~/.active-rstudio-document")
figure1 <- ggplot(data= q1.fig.dat)+                                              # specify data
klds
source("~/.active-rstudio-document")
figure1 <- ggplot(data= fig.dat1)+                                              # specify data
s
fig.dat1 <- tibble(x = seq(0, 1, length.out=1000))|>   # generate a grid of points
mutate(beta.pdf = dbeta(x, alpha, beta),                      # compute the beta PDF
norm.pdf = dnorm(x,                                    # Gaussian distribution with
mean = alpha/(alpha+beta),            # same mean and variance
sd = sqrt((alpha*beta)/((alpha+beta)^2*(alpha+beta+1)))))
figure1 <- ggplot(data= fig.dat1)+                                              # specify data
geom_line(aes(x=x, y=beta.pdf, color="Beta(2,5)")) +                 # plot beta dist
geom_line(aes(x=x, y=norm.pdf, color= ""))   # plot guassian dist
ggplot(data= fig.dat1)+
geom_histogram(aes(x=x, y=beta.pdf, color="Beta(2,5)"))
ggplot(data= fig.dat1)+
geom_histogram(aes(x=x, y=beta.pdf, color="Beta(2,5)"))
(beta.summary(2,5,3,T))
ggplot(data= fig.dat1)+
geom_histogram(aes(x=x, y=beta.pdf, color="Beta(2,5)"))
?geom_histogram
ggplot(data = fig.dat1) +
geom_histogram(aes(x=x, y=beta.pdf, color="Beta(2,5)")) +
theme()
geom_density()
?geom_density
ggplot(data = fig.dat1) +
geom_histogram(aes(x=x, y=beta.pdf, color="Beta(2,5)")) +
geom_density(500)
ggplot(data = fig.dat1, aes(x=x, y=beta.pdf, color="Beta(2,5)")) +
geom_histogram() +
sdf
ggplot(data = fig.dat1, aes(x=x, y=beta.pdf, color="Beta(2,5)")) +
geom_histogram()
ggplot(data = fig.dat1, aes(x=x, y=beta.pdf)) +
geom_histogram()
ggplot(data = fig.dat1) +
geom_histogram(aes(x=x, y=beta.pdf))
ggplot(data.frame(x = fig.dat1), aes(x = x)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black") +
geom_density( size = 1) +
labs(title = title, x = "Value", y = "Density") +
theme_minimal()
ggplot
ggplot(data.frame(x = fig.dat1), aes(x = x)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black") +
geom_density( size = 1) +
labs(title = title, x = "Value", y = "Density") +
theme_minimal()
View(fig.dat1)
View(fig.dat1)
View(figure1)
View(figure1)
View(figure4)
View(figure4)
View(q1.fig.dat)
fig.dat2 <- tibble(x = seq(0, 1, length.out=1000))|>   # generate a grid of points
mutate(beta.pdf = dbeta(x, alpha, beta),                      # compute the beta PDF
norm.pdf = dnorm(x,                                    # Gaussian distribution with
mean = alpha/(alpha+beta),            # same mean and variance
sd = sqrt((alpha*beta)/((alpha+beta)^2*(alpha+beta+1)))))
View(fig.dat2)
fig.dat2
beta.summary <- function(alpha, beta, k, centered){
if(centered){
integrand <- function(x) (x)*dbeta(x,alpha,beta)
mu_x = integrate(integrand, lower = 0, upper = 1)
integrand <- function(x) (x - mu_x)^k * dbeta(x,alpha,beta)
kth.uncentered = integrate(integrand, lower = 0, upper = 1)
}
else{
integrand <- function(x) (x^k)*dbeta(x,alpha,beta)
kth.centered = integrate(integrand, lower = 0, upper = 1)
}
}
(beta.summary(2,5,3,T))
clearPushBack()
install.packages("cumstats")
?cumstats
??cumstats
#########################
# task four
library(cumstats)
